CREATE EXTENSION IF NOT EXISTS pgcrypto;

CREATE TABLE users (
    id_user SERIAL PRIMARY KEY,
    name VARCHAR NOT NULL,
    firstname VARCHAR,
    society VARCHAR,
    password VARCHAR NOT NULL,
    email VARCHAR,
    admin BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ DEFAULT NULL,
    last_conn TIMESTAMPTZ DEFAULT NULL
);
INSERT INTO users (name,firstname,society,password,email,admin)
VALUES ('Dupond','Fred','LECLIENT',crypt('MDP_Admin_123', gen_salt('bf')),'fred.admin@leclient.fr',TRUE),
       ('Nzengue','Daouda','LECLIENT',crypt('MDP_Admin_456', gen_salt('bf')),'daouda.nzengue@leclient.fr',TRUE),
       ('Pierre','Rubens','Capgemini',crypt('MDP_User_123', gen_salt('bf')),'rubens.pierre@capgemini.fr',FALSE),
       ('Rivière','Sophie','SAP',crypt('MDP_User_234', gen_salt('bf')),'sophie.r@sap.fr',FALSE),
       ('Ziae Yekta','Amith','Salesforce',crypt('MDP_User_345', gen_salt('bf')),'amith.ziae_yekta@salesforce.com',FALSE),
       ('Lombard','Michel','Thales',crypt('MDP_User_456', gen_salt('bf')),'michellombard@thales.fr',FALSE);

CREATE TABLE qcm (
    id_qcm SERIAL PRIMARY KEY,
    title VARCHAR NOT NULL,
    description VARCHAR,
    created_by INTEGER,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ DEFAULT NULL
);
INSERT INTO qcm (title,description,created_by)
VALUES ('Java','Test de connaissance sur le language Java',2),
       ('Python débutant','Test de connaissance sur le language python pour les débutants',1),
       ('Angular','Test de connaissance sur le framework Angular',2),
       ('PHP','Test de connaissance sur le language PHP',2),
       ('JavaScript','Test de connaissance sur le language JavaScript',1),
       ('NodeJS','Test de connaissance sur la plateforme de développement JavaScript NodeJS',2);

CREATE TABLE question_qcm (
    id_question SERIAL PRIMARY KEY,
    id_qcm INTEGER,
    question VARCHAR NOT NULL,
    type VARCHAR(8) CHECK (type IN ('single', 'multiple')) DEFAULT 'single',
    position INTEGER,
    FOREIGN KEY (id_qcm) REFERENCES qcm(id_qcm)
); 
INSERT INTO question_qcm (id_qcm,question,type,position)
VALUES (1,'Java est un langage ...','single',1),
       (1,'Quel mot-clé permet de définir une classe en Java ?','single',2),
       (1,'Quel est le nom du point d’entrée d’une application Java ?','single',3),
       (1,'Quel type est utilisé pour les nombres à virgule en Java ?','multiple',4),
       (1,'Que fait le ramasse-miettes (Garbage Collector) en Java ?','single',5),
       (1,'Java est principalement…','single',6),
       (1,'Quel mot-clé permet d’hériter d’une classe ?','single',7),
       (1,'Une interface en Java peut contenir…','single',8),
       (1,'Quel outil compile les fichiers .java en bytecode ?','single',9),
       (1,'Est ce que JVM (Java Virtual Machine) exécute le bytecode Java sur la machine hôte ?','single',10),
       (3,'Quel est le rôle du décorateur @Component ?','single',1),
       (3,'Dans Angular, ngOnInit est utilisé pour :','single',2),
       (3,'Les directives structurelles modifient :','multiple',3),
       (3,'Lequel de ces éléments fait partie du système de routage Angular ?','multiple',4),
       (3,'Parmi ces options, lesquelles sont des types de liaison de données Angular ?','multiple',5),
       (3,'Quel est le rôle d’un service dans Angular ?','single',6),
       (3,'Quelles sont les manières d’injecter un service dans un composant Angular ?','multiple',7),
       (3,'Lequel de ces modules est essentiel pour utiliser les formulaires réactifs dans Angular ?','single',8),
       (3,'Quelle est la différence principale entre un Observable et une Promise ?','single',9),
       (3,'Parmi ces pipes Angular, lesquels sont intégrés par défaut ?','multiple',10),
       (3,'Lequel des éléments suivants peut-on utiliser pour créer un module Angular ?','multiple',11),
       (3,'Quels avantages apporte le lazy loading dans Angular ?','multiple',12);


CREATE TABLE response_question (
    id_response SERIAL PRIMARY KEY,
    id_question INTEGER,
    response VARCHAR,
    is_correct BOOLEAN,
    position INTEGER,
    FOREIGN KEY (id_question) REFERENCES question_qcm(id_question)
);
INSERT INTO response_question (id_question,response,is_correct,position)
VALUES (1,'interprété',FALSE,1),
       (1,'compilé',FALSE,2),
       (1,'les deux',TRUE,3),
       (2,'function',FALSE,1),
       (2,'class',TRUE,2),
       (2,'object',FALSE,3),
       (3,'main',TRUE,1),
       (3,'master',FALSE,2),
       (4,'int',FALSE,1),
       (4,'float',TRUE,2),
       (4,'double',TRUE,3),
       (5,'Il supprime les variables inutilisées de la mémoire',TRUE,1),
       (5,'Il trie le code source',FALSE,2),
       (5,'Il compile le bytecode',FALSE,3),
       (6,'Orienté objet',TRUE,1),
       (6,'Fonctionnel',FALSE,2),
       (6,'Procédural',FALSE,3),
       (7,'extends',TRUE,1),
       (7,'inherits',FALSE,2),
       (7,'super',FALSE,3),
       (8,'Des attributs avec valeurs',FALSE,1),
       (8,'Des méthodes abstraites',TRUE,2),
       (8,'Du code exécutable avant Java 8',FALSE,3),
       (9,'java',FALSE,1),
       (9,'javac',TRUE,2),
       (9,'jvm',FALSE,3),
       (10,'vrai',TRUE,1),
       (10,'faux',FALSE,2),
       (11,'Définir un service injectable',FALSE,1),
       (11,'Déclarer une directive',FALSE,2),
       (11,'Définir un composant Angular',TRUE,3),
       (11,'Définir un module Angular',FALSE,4),
       (12,'Détruire un composant',FALSE,1),
       (12,'Initialiser le composant après l’initialisation des propriétés d’entrée',TRUE,2),
       (12,'Mettre à jour le DOM automatiquement',FALSE,3),
       (12,'Gérer les services injectés',FALSE,4),
       (13,'La structure du DOM',TRUE,1),
       (13,'Les styles CSS',FALSE,2),
       (13,'Le comportement du DOM',TRUE,3),
       (14,'RouterModule',TRUE,1),
       (14,'Routes',TRUE,2),
       (14,'NgModule',FALSE,3),
       (14,'RouterLink',TRUE,4),
       (15,'Liaison unidirectionnelle (interpolation)',TRUE,1),
       (15,'Liaison bidirectionnelle ([(ngModel)])',TRUE,2),
       (15,'Liaison événementielle ((click))',TRUE,3),
       (15,'Liaison CSS directe',FALSE,4),
       (16,'Fournir une logique métier réutilisable',TRUE,1),
       (16,'Définir un composant visuel',FALSE,2),
       (16,'Remplacer les modules',FALSE,3),
       (16,'Gérer uniquement les événements du DOM',FALSE,4),
       (17,'Via le constructeur du composant',TRUE,1),
       (17,'Via le décorateur @Injectable',TRUE,2),
       (17,'En utilisant ngOnInit',FALSE,3),
       (17,'En important directement le fichier du service',FALSE,4),
       (18,'FormsModule',FALSE,1),
       (18,'ReactiveFormsModule',TRUE,2),
       (18,'HttpClientModule',FALSE,3),
       (19,'Une Promise peut émettre plusieurs valeurs',FALSE,1),
       (19,'Un Observable peut émettre plusieurs valeurs dans le temps',TRUE,2),
       (19,'Une Promise est paresseuse et ne s’exécute que lorsqu’on l’abonne',FALSE,3),
       (20,'DatePipe',TRUE,1),
       (20,'CurrencyPipe',TRUE,2),
       (20,'CustomPipe',FALSE,3),
       (20,'UpperCasePipe',TRUE,4),
       (21,'@NgModule',TRUE,1),
       (21,'@Component',FALSE,2),
       (21,'imports',TRUE,3),
       (21,'declarations',TRUE,4),
       (22,'Réduction du temps de chargement initial',TRUE,1),
       (22,'Chargement conditionnel des modules',TRUE,2),
       (22,'Permet d’éviter d’utiliser les composants',FALSE,3),
       (22,'Amélioration de la performance globale de l’application',TRUE,4);

CREATE TABLE quiz_attempts (
    id_attempt SERIAL PRIMARY KEY,
    id_qcm INTEGER,
    id_user INTEGER,
    started_at TIMESTAMPTZ,
    ended_at TIMESTAMPTZ,
    completed BOOLEAN,
    FOREIGN KEY (id_qcm) REFERENCES qcm(id_qcm),
    FOREIGN KEY (id_user) REFERENCES users(id_user)
);
INSERT INTO quiz_attempts (id_qcm,id_user,started_at,ended_at,completed)
VALUES (1,4,'2025-09-16 17:24:42.02395+02','2025-09-16 17:24:52.00425+02',false),
       (3,3,'2025-09-16 17:14:15.45213+02','2025-09-16 17:27:17.14528+02',false),
       (3,4,'2025-09-16 16:45:18.45276+02','2025-09-16 16:55:35.45722+02',true);

CREATE TABLE user_answers (
    id_attempt INTEGER,
    id_question INTEGER,
    id_response INTEGER,
    PRIMARY KEY (id_attempt, id_question,id_response)
);
INSERT INTO user_answers (id_attempt,id_question,id_response)
VALUES (2,11,31),
       (2,12,35),
       (2,13,37),
       (2,13,39),
       (2,14,40),
       (2,14,41),
       (2,17,53),
       (2,18,57),
       (2,19,60),
       (2,20,62),
       (2,20,63),
       (2,20,64),
       (2,21,66),
       (2,21,67),
       (2,21,68),
       (3,11,31),
       (3,12,34),
       (3,13,37),
       (3,13,39),
       (3,14,40),
       (3,14,41),
       (3,14,43),
       (3,15,44),
       (3,15,45),
       (3,15,46),
       (3,16,48),
       (3,17,52),
       (3,17,53),
       (3,18,57),
       (3,19,60),
       (3,20,62),
       (3,20,63),
       (3,20,65),
       (3,21,66),
       (3,21,68),
       (3,21,69),
       (3,22,70),
       (3,22,71),
       (3,22,73);