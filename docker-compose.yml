services:
  postgres:
    image: postgres
    container_name: my-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 0zaIySyzZro1qeSbe8aQ
      POSTGRES_DB: webdev
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./Database:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  web-dev:
    image: node:18
    container_name: my-web-dev
    working_dir: /app
    ports:
      - "3000:3000"
    volumes:
      - ./Backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:0zaIySyzZro1qeSbe8aQ@postgres:5432/webdev
      - PORT=3000
    depends_on:
      postgres:
        condition: service_healthy
    command: sh -c "sleep 10 && npm install && npm start"

  frontend:
    image: node:18
    container_name: my-frontend
    working_dir: /usr/src/app
    volumes:
      - ./Frontend:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "4200:4200"
    environment:
      - NODE_ENV=development
    # ðŸ‘‡ IMPORTANT : Angular doit Ã©couter sur 0.0.0.0 pour Ãªtre accessible
    command: sh -c "npm install && npm run start -- --host 0.0.0.0 --poll 2000"
    depends_on:
      - web-dev

  compodoc:
    image: node:18
    container_name: my-compodoc
    working_dir: /usr/src/app
    volumes:
      - ./Frontend:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "8081:8080"
    command: sh -c "npm install -g @compodoc/compodoc &&
      compodoc -p tsconfig.app.json -d documentation -s --host 0.0.0.0 --port 8080"
    depends_on:
      - frontend

volumes:
  pgdata:
